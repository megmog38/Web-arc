# dsniff util completion by Guillaume Rousse <rousse@ccr.jussieu.fr>

# arpspoof(8) completion
#
have arpspoof &&
_arpspoof()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -i)
            _interfaces
            return 0
            ;;
        -t)
            _known_hosts_real "$cur"
            return 0
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-i -t' -- "$cur" ) )
    else
        _known_hosts_real "$cur"
    fi

} &&
complete -F _arpspoof arpspoof

# dnsspoof(8) completion
#
have dnsspoof &&
_dnsspoof()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -i)
            _interfaces
            return 0
            ;;
        -f)
            _filedir
            return 0
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-i -f' -- "$cur" ) )
    fi

} &&
complete -F _dnsspoof dnsspoof

# dsniff(8) completion
#
have dsniff &&
_dsniff()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -@(r|w|f))
            _filedir
            return 0
            ;;
        -i)
            _interfaces
            return 0
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-c -d -m -n -i -s -f -t -r -w' -- "$cur" ) )
    fi

} &&
complete -F _dsniff dsniff

# filesnarf(8), mailsnarf(8) and msgsnarf (8) completion
#
have filesnarf || have mailsnarf || have msgsnarf &&
_snarf()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -i)
            _interfaces
            return 0
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-i -v' -- "$cur" ) )
    fi

} &&
complete -F _snarf filesnarf mailsnarf msgsnarf

# macof(8) completion
#
have macof &&
_macof()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -i)
            _interfaces
            return 0
            ;;
    esac


    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-i -s -d -e -x -y -n' -- "$cur" ) )
    fi

} &&
complete -F _macof macof

# sshmitm(8) completion
#
have sshmitm &&
_sshmitm()
{
    local cur

    COMPREPLY=()
    cur=`_get_cword`

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-d -I -p' -- "$cur" ) )
    else
        _known_hosts_real "$cur"
    fi

} &&
complete -F _sshmitm sshmitm

# sshow(8) completion
#
have sshow &&
_sshow()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -i)
            _interfaces
            return 0
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-d -i' -- "$cur" ) )
    fi

} &&
complete -F _sshow sshow

# tcpkill(8) completion
#
have tcpkill &&
_tcpkill()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -i)
            _interfaces
            return 0
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-i -1 -2 -3 -4 -5 -6 -7 -8 -9' -- "$cur" ) )
    fi

} &&
complete -F _tcpkill tcpkill

# tcpnice(8) completion
#
have tcpnice &&
_tcpnice()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -i)
            _interfaces
            return 0
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-A -I -M -i' -- "$cur" ) )
    fi

} &&
complete -F _tcpnice tcpnice

# urlsnarf(8) completion
#
have urlsnarf &&
_urlsnarf()
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -i)
            _interfaces
            return 0
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-n -i -v' -- "$cur" ) )
    fi

} &&
complete -F _urlsnarf urlsnarf

# webmitm(8) completion
#
have webmitm &&
_webmitm()
{
    local cur

    COMPREPLY=()
    cur=`_get_cword`

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-d' -- "$cur" ) )
    else
        _known_hosts_real "$cur"
    fi

} &&
complete -F _webmitm webmitm

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
